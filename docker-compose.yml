version: '3.3'
services:
  spark-master:
    image: spark-master
    command: /start-spark-master.sh
    build:
      context: ./consumer
      dockerfile: Dockerfile
    ports:
    - 7077:7077
    - 8088:8088
    environment:
    - SPARK_LOCAL_IP=spark-master
    - SPARK_MASTER_PORT=7077
    - SPARK_MASTER_WEBUI_PORT=8088
    hostname: spark-master
  spark-worker:
    image: spark-master
    command: /start-spark-worker.sh
    environment:
    - SPARK_MASTER=spark://spark-master:7077
    - SPARK_WORKER_CORES=2
    - SPARK_WORKER_MEMORY=4096M
    - SPARK_WORKER_WEBUI_PORT=8088
    depends_on:
    - spark-master
  consumer:
    image: spark-master
    command: python consumer/main.py
    volumes:
    - ./consumer/:/consumer
    restart: unless-stopped
  kafka:
    image: wurstmeister/kafka
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    ports:
    - 9092:9092
    environment:
      KAFKA_ADVERTISED_HOST_NAME: ${DOCKER_KAFKA_HOST}
      KAFKA_CREATE_TOPICS: example:1:1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
    - zookeeper
  monitor:
    image: oetkertor:latest
    command: uvicorn monitor.app.main:app --reload --workers 1 --host 0.0.0.0 --port 8501
    volumes:
    - ./monitor/:/usr/src/monitor
    build:
      context: ./monitor
      dockerfile: Dockerfile
    ports:
    - 8501:8501
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
    - 2181:2181
